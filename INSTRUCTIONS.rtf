{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs48 \cf0 Steps for More Games, Global High Scores and Analytics:
\b0\fs24 \

\fs48 Table of contents:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs24 \cf0 \
1. General\
2. More Games\
3. Global High Scores\
    a) Single Leaderboard\
    b) Multiple Leaderboards\
4. Analytics\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs48 \cf0 1. General:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0\fs24 \cf0 \
In XCode left bar (project navigator), go to Projectfiles-iOS -> Resources -> Info.plist\
Change the field corresponding to Bundle identifier to "com.yourname.appname" where yourname is your name and appname is the name of your app.\
Make up a secret key, for example, mine is "DesaiAshu", yours can also be your makegameswithus account name, or something else you choose.\
Make it unique and hard to guess, no special characters.\
Do not share your Bundle identifier or secret key with anyone, as they can use it to hack your high scores.\
Email ashu@makegameswith.us with your Bundle identifier and secret key (note: these are case sensitive) 
\b and
\b0  whether your game uses high scores or low scores\
\
Drag the MGWU 
\b folder
\b0  into your project, make sure you select copy files and add them to target!\
\
In AppDelegate.m:\
At the top add the line:\
#import "MGWU.h"\
In the method initializationComplete add the line:\
[MGWU loadMGWU:@"DesaiAshu"];\
Where instead of DesaiAshu you use your own secret key\
Finally add these methods to AppDelegate.m:\
- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)tokenId \{\
	[MGWU registerForPush:tokenId];\
\}\
\
- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo \{\
    [MGWU gotPush:userInfo];\
\}\
\
\
- (void)application:(UIApplication*)application didFailToRegisterForRemoteNotificationsWithError:(NSError*)error\{\
    [MGWU failedPush:error];\
\}\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs48 \cf0 2. More Games:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0\fs24 \cf0 \
In the scene you use for your menu, at the top add the line:\
#import "MGWU.h"\
When the More Games button is clicked include the line:\
[MGWU display];\
Make sure this is only called once when the button is pressed\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b\fs48 \cf0 3. Global High Scores:
\b0\fs24 \

\fs48 a) Single Leaderboard:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs24 \cf0 \
To submit a new high score use the line:\
[MGWU submitHighScore:10 byPlayer:@"ashu" forLeaderboard:@"level1"];\
Where level1 is what you want to call your leaderboard\
You probably want to allow users to input their name when they get a high score.\
If you call this method again with a lower score, it will be ignored. With a higher score, it will replace the previous entry on the server.\
\
\
To retrieve scores, there are two parts, first a line of code that begins downloading the high scores, then a method which is called once download is complete.\
To begin download, use this line of code:\
[MGWU getHighScoresForLeaderboard:@"level1" withCallback:@selector(receivedScores:) onTarget:self]; \
Where level1 is what you chose to call your leaderboard\
Then in the same class, add the following method:\
- (void)receivedScores:(NSArray*)scoreArray\
\{\
	//Do stuff with scores in here! Display them!\
\}\
\
scoreArray will be an array with up to 100 high scores. If there is no connection to the internet, scoreArray will be nil.\
The first element in the array will be a dictionary containing info on the local players high score with the following key value pairs:\
Key: @"name"\
Value: (NSString) name of local player, this will be @"Player" if no score has been submitted\
Key: @"score"\
Value: (NSNumber) high score, this will be 0 if no score has been submitted\
Key: @"rank"\
Value: (NSNumber) rank, this will be the number of players if no score has been submitted\
\
The rest of the elements in the array will be dictionaries containing the top scores with the following key value pairs:\
Key: @"name"\
Value: (NSString) name of player\
Key: @"score"\
Value: (NSNumber) high score\
\
Example of accessing this would be:\
for (int i = 1; i < [scoreArray count]; i++)\
\{\
	NSDictionary *player = [scoreArray objectAtIndex:i];\
	NSString *name = [player objectForKey:@"name"];\
	NSNumber *s = [player objectForKey:@"score"];\
	int score = [s intValue];\
	//Do something with name and score\
\}\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs48 \cf0 b) Multiple Leaderboards:
\fs24 \
You can also create separate leaderboards by level (or something else) by using the line:\
[MGWU submitHighScore:10 byPlayer:@"ashu" forLeaderboard:@"level1"];\
Where level1 is whatever you want to name the leaderboard\
You probably want to allow users to input their name when they get a high score.\
If you call this method again with a lower score for the level, it will be ignored. With a higher score, it will replace the previous entry on the server.\
\
\
If you've created different levels you can retrieve multiple high score lists at once using the following code\
NSArray *leaderboards = [[NSArray alloc] initWithObjects:@"level1", @"level2", nil];\
Where level1 and level2 are the names you chose for the leaderboards\
To begin download use the line:\
[MGWU getHighScoresForMultipleLeaderboards:leaderboards withCallback:@selector(receivedAllScores:) onTarget:self];\
\
Then in the same class, add the following method:\
- (void)receivedAllScores:(NSDictionary*)scoreDictionary\
\{\
	//Do stuff with scores in here! Display them!\
\}\
\
Example of accessing this would be:\
NSArray *scoreArray1 = [scoreDictionary objectForKey:@"level1"];\
NSArray *scoreArray2 = [scoreDictionary objectForKey:@"level2"];\
for (int i = 1; i < [scoreArray1 count]; i++)\
\{\
	NSDictionary *player = [scoreArray1 objectAtIndex:i];\
	NSString *name = [player objectForKey:@"name"];\
	NSNumber *s = [player objectForKey:@"score"];\
	int score = [s intValue];\
	//Do something with name and score for level 1\
\}\
for (int i = 1; i < [scoreArray2 count]; i++)\
\{\
	NSDictionary *player = [scoreArray2 objectAtIndex:i];\
	NSString *name = [player objectForKey:@"name"];\
	NSNumber *s = [player objectForKey:@"score"];\
	int score = [s intValue];\
	//Do something with name and score for level 2\
\}\
Where level1 and level2 are the names you chose for the leaderboards\
\
\
\

\b\fs48 4. Analytics:
\b0\fs24 \
Basic analytics of opening and closing the app are included by default.\
To log any additional events (such as completing the tutorial or completing a level) use this line of code:\
[MGWU logEvent:@"level1complete"];\
Where level1complete is replaced by any other event name, don't use special characters\
\
To log an event with parameters (like score):\
NSNumber* highscore = [NSNumber numberWithInt:9001];\
NSDictionary *params = [[NSDictionary alloc] initWithObjectsAndKeys: highscore, @"highscore", nil];\
[MGWU logEvent:@"level1complete" withParams:params];\
Where params is an NSDictionary with any parameters you wish to send up\
}